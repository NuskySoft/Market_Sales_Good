# 📄 **DOCUMENTO MAESTRO V9 - MARKET SALES**

## 📱 **INFORMACIÓN DEL PROYECTO**

### **Nombre del Proyecto:** Market Sales
### **Package Name:** es.nuskysoftware.marketsales
### **Estado Actual:** 🚀 **V9 - MÓDULO MERCADILLOS IMPLEMENTADO**

---

## ✅ **V9 - NUEVA FUNCIONALIDAD: GESTIÓN DE MERCADILLOS**

### **🏪 MÓDULO MERCADILLOS - CARACTERÍSTICAS:**
- ✅ **Calendario interactivo** con navegación por meses
- ✅ **Estados de mercadillos** con código de colores personalizado
- ✅ **Card de próximo mercadillo** siempre visible
- ✅ **Soporte multi-mercadillo** por día
- ✅ **Sistema de prioridades** para visualización
- ✅ **Leyenda de estados** con iconos descriptivos
- ✅ **Base de datos local** con Room
- ✅ **Sincronización Firebase** preparada

### **📊 ESTADOS DE MERCADILLO IMPLEMENTADOS:**
1. **PROGRAMADO_PARCIAL** (1) - Azul claro - 📋
2. **PROGRAMADO_TOTAL** (2) - Azul oscuro - 📅
3. **EN_CURSO** (3) - Verde - 🟢
4. **PENDIENTE_ARQUEO** (4) - Naranja - ⚠️
5. **PENDIENTE_ASIGNAR_SALDO** (5) - Rojo - 🔴
6. **CERRADO_COMPLETO** (6) - Verde oscuro - ✅
7. **CANCELADO** (7) - Gris - ❌

---

## ✅ **SISTEMAS COMPLETADOS (V1-V8)**

### **🔐 AUTENTICACIÓN COMPLETA:**
- ✅ **Email/Password** 100% funcional
- ✅ **Google Auth** completamente integrado
- ✅ **Sistema de roles** (SUPER_ADMIN para todos temporalmente)
- ✅ **MenuHamburguesa inteligente** con estados dinámicos
- ✅ **PantallaLogin** con diseño preservado
- ✅ **PantallaPerfil** con gestión de cuenta
- ✅ **Logout universal** para ambos métodos

### **⚙️ CONFIGURACIÓN DINÁMICA:**
- ✅ **Idiomas** (Español/English) en tiempo real
- ✅ **Fuentes** (Montserrat/Poppins/Roboto) dinámicas
- ✅ **Modo oscuro/claro** funcionando perfectamente
- ✅ **Sistema Premium/FREE** con restricciones
- ✅ **Moneda configurable** (10 opciones)
- ✅ **PantallaConfiguracion** completa con permisos

### **🏗️ ARQUITECTURA ROBUSTA:**
- ✅ **ConfigurationManager** singleton con StateFlows
- ✅ **StringResourceManager** localización ES/EN completa
- ✅ **Room Database** v3 con migraciones
- ✅ **Firebase Firestore** sincronización bidireccional
- ✅ **Offline-first** approach implementado
- ✅ **AuthRepository** con flujo híbrido

---

## 📁 **ESTRUCTURA V9 ACTUALIZADA**

```
app/src/main/java/es/nuskysoftware/marketsales/
├── MainActivity.kt ✅
├── data/
│   ├── local/
│   │   ├── dao/
│   │   │   ├── ConfiguracionDao.kt ✅
│   │   │   ├── UserDao.kt ✅
│   │   │   └── MercadilloDao.kt ✅ (NEW V9)
│   │   ├── entity/
│   │   │   ├── ConfiguracionEntity.kt ✅
│   │   │   ├── UserEntity.kt ✅
│   │   │   └── MercadilloEntity.kt ✅ (NEW V9)
│   │   └── database/
│   │       └── AppDatabase.kt ✅ (v4 con tabla mercadillos)
│   └── repository/
│       ├── ConfiguracionRepository.kt ✅
│       ├── AuthRepository.kt ✅
│       ├── UserRepository.kt ✅
│       └── MercadilloRepository.kt 🚧 (NEW V9 - Por implementar)
├── ui/
│   ├── theme/
│   │   ├── Color.kt ✅
│   │   ├── Shape.kt ✅
│   │   ├── Type.kt ✅
│   │   ├── Theme.kt ✅
│   │   └── LocalConfiguration.kt ✅
│   ├── components/
│   │   └── MenuHamburguesa.kt ✅
│   ├── pantallas/
│   │   ├── PantallaSplash.kt ✅
│   │   ├── PantallaLogin.kt ✅
│   │   ├── PantallaConfiguracion.kt ✅
│   │   ├── PantallaPerfil.kt ✅
│   │   └── PantallaMercadillos.kt ✅ (NEW V9)
│   └── viewmodel/
│       ├── ConfiguracionViewModel.kt ✅
│       ├── AuthViewModel.kt ✅
│       └── MercadilloViewModel.kt 🚧 (NEW V9 - Por implementar)
├── utils/
│   ├── FooterMarca.kt ✅
│   ├── ConfigurationManager.kt ✅
│   ├── StringResourceManager.kt ✅ (actualizar con strings mercadillos)
│   ├── GoogleAuthHelper.kt ✅
│   └── EstadosMercadillo.kt ✅ (NEW V9)
└── navigation/
    └── Pantalla.kt ✅ (actualizar con ruta mercadillos)
```

---

## 💾 **BASE DE DATOS V9 - TABLA MERCADILLOS**

### **Estructura de la tabla `mercadillos`:**

```kotlin
@Entity(tableName = "mercadillos")
data class MercadilloEntity(
    @PrimaryKey val id: String,           // UUID único
    val userId: String,                   // ID del usuario propietario
    val fechaHora: Long,                  // Timestamp
    val lugar: String,                    // Lugar del mercadillo
    val organizador: String,              // Organizador
    val esGratis: Boolean = true,         // Si es gratuito
    val estado: Int = 0,                  // Estado (0-7)
    
    // Campos opcionales
    val turno: String? = null,
    val ubicacion: String? = null,
    val municipio: String? = null,
    val importeSuscripcion: Double = 0.0,
    val puntoDeLuz: Boolean = false,
    val requiereCarpa: Boolean = true,
    val requiereMesa: Boolean = true,
    val horaInicio: String? = null,
    val horaFin: String? = null,
    val saldoInicial: Double = 0.0,
    
    // Metadata
    val fechaCreacion: Long,
    val fechaModificacion: Long,
    val sincronizadoFirebase: Boolean = false
)
```

---

## 🎯 **FUNCIONALIDADES V9 - MERCADILLOS**

### **📅 Calendario Interactivo:**
- Navegación mes a mes con flechas
- Visualización de días con mercadillos
- Código de colores según estado
- Soporte para múltiples mercadillos por día
- Indicadores visuales (puntos) para días con varios eventos

### **📊 Sistema de Estados:**
- 7 estados predefinidos con colores únicos
- Iconos emoji descriptivos
- Sistema de prioridades para ordenamiento
- Detección de estados que requieren atención

### **🔍 Próximo Mercadillo:**
- Card siempre visible con información clave
- Actualización automática basada en fecha actual
- Muestra: fecha, hora, lugar y organizador
- Navegación rápida al detalle

### **🔄 Sincronización:**
- Base de datos local con Room
- Preparado para sincronización Firebase
- Sistema offline-first
- Campos de control de sincronización

---

## 📋 **PENDIENTES V9**

### **Por implementar:**
1. **MercadilloRepository.kt** - Lógica de negocio
2. **MercadilloViewModel.kt** - ViewModel para la pantalla
3. **Actualizar AppDatabase** - Agregar tabla mercadillos y migración
4. **Actualizar StringResourceManager** - Strings para mercadillos
5. **Actualizar MainActivity** - Agregar navegación a PantallaMercadillos
6. **Pantalla CrearMercadillo** - Formulario para nuevos mercadillos
7. **Pantalla DetalleMercadillo** - Vista detallada de un mercadillo

### **Strings necesarios para StringResourceManager:**
```kotlin
"mercadillos_titulo" -> "Mercadillos" / "Markets"
"proximo_mercadillo" -> "Próximo Mercadillo" / "Next Market"
"añadir_mercadillo" -> "Añadir Mercadillo" / "Add Market"
"ver_leyenda" -> "Ver leyenda" / "View legend"
"leyenda_estados" -> "Leyenda de Estados" / "Status Legend"
"entendido" -> "Entendido" / "Understood"
```

---

## 🚀 **PRÓXIMOS PASOS**

### **Inmediato (V9.1):**
1. Crear MercadilloRepository
2. Crear MercadilloViewModel
3. Actualizar AppDatabase con migración v4
4. Conectar PantallaMercadillos con datos reales
5. Actualizar navegación en MainActivity

### **Corto plazo (V9.2):**
1. Pantalla para crear/editar mercadillos
2. Pantalla de detalle de mercadillo
3. Sincronización con Firebase
4. Sistema de notificaciones para próximos mercadillos

### **Medio plazo (V10):**
1. Gestión de productos por mercadillo
2. Sistema de ventas integrado
3. Generación de informes
4. Estadísticas y gráficos

---

## 🔒 **REGLAS DE DESARROLLO V9**

### **Preservación obligatoria:**
- ✅ NUNCA modificar diseños existentes sin autorización
- ✅ MANTENER compatibilidad con sistemas existentes
- ✅ RESPETAR tema oscuro/claro en nuevas pantallas
- ✅ APLICAR localización ES/EN en todos los textos
- ✅ USAR StateFlows para estados reactivos

### **Nuevas reglas V9:**
- ✅ TODOS los mercadillos deben tener userId
- ✅ ESTADOS solo pueden ser valores 0-7
- ✅ FECHAS siempre en timestamp Long
- ✅ IDs siempre UUID strings
- ✅ SINCRONIZACIÓN debe ser no bloqueante

---

## 📊 **ESTADO DEL PROYECTO**

### **✅ Completado (100%):**
- Sistema de autenticación híbrido
- Configuración dinámica completa
- Sistema de usuarios y roles
- UI/UX base establecido
- Pantalla de Mercadillos (UI)

### **🚧 En progreso (60%):**
- Módulo de Mercadillos (falta conexión con datos)
- Sistema de sincronización

### **📋 Pendiente (0%):**
- Gestión de productos
- Sistema de ventas
- Reportes y estadísticas
- Sistema de notificaciones

---

## 🎉 **RESUMEN V9**

**Market Sales V9** introduce el módulo de gestión de mercadillos con:
- ✅ Calendario visual interactivo
- ✅ Sistema de estados con colores
- ✅ Base de datos preparada
- ✅ UI/UX completo y funcional
- ✅ Localización ES/EN
- ✅ Tema oscuro/claro respetado

**Estado:** La aplicación está al **70% de completitud** para una versión MVP funcional.

---

**VERSIÓN:** V9.0
**FECHA:** Enero 2025
**ESTADO:** 🚀 **MÓDULO MERCADILLOS UI COMPLETO - PENDIENTE CONEXIÓN DATOS**